@using System.Globalization
@using Zeta.AgentosCRM.Web.Areas.AppAreaName.Models.Common.Modals
@model CreateOrEditPartnerContactModalViewModel
@using Abp.Extensions
@using Zeta.AgentosCRM.Web.Areas.AppAreaName.Models.Partners;
@await Html.PartialAsync("~/Areas/AppAreaName/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditContact")) :L("AddContacts")))

<div class="modal-body">
    <div id="ContactsInformationsTab">
        <form name="ContactsInformationsForm" role="form" novalidate class="form-validation">
            @if (Model.IsEditMode)
            {
                <input type="hidden" name="id" value="@Model.PartnerContact.Id" />
            }

            <input type="hidden" name="partnerId" id="partnerId" value="" />

            <div class="row col-12">
            
                <div class="form-group col-6">
                    <label for="name" class="form-label">Name</label>
                    <input type="text" class="form-control custom-small-input rounded-0" id="Name" name="Name" value="@Model.PartnerContact.Name">
                </div>

          
           
                <div class="form-group col-6 ">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" class="form-control custom-small-input rounded-0" id="Email" name="Email" value="@Model.PartnerContact.Email">
                </div>
            </div>
            <div class="row col-12 mt-1">
               @*  <div class="form-group col-6">
                    <label for="branch" class="form-label">Branch</label>
                    <select class="form-control rounded-0" id="country" name="country">
                        <option value="country"> branch 1</option>
                        <option value="country">branch 2</option>
                        <!-- Add more options as needed -->
                    </select>
                </div> *@
                <div class="form-group col-6 mt-1">
                    <label for="Branch" class="form-label">Branch</label>
                    @Html.DropDownList("branchId", new SelectList(Model.PartnerContactBranchList,"Id","DisplayName", (Model.IsEditMode ? Model.PartnerContact.BranchId.ToString() : "")),@L("SelectABranch"), new { @class = "form-control custom-small-input rounded-0" , @required="required" })
                </div>
                <div class="form-group col-6 mt-1">
                    <label for="email" class="form-label">Fax</label>
                    <input type="text" class="form-control custom-small-input rounded-0" id="Fax" name="Fax" value="@Model.PartnerContact.Fax">
                </div>
            </div>
            <div class="row col-12 mt-1">

                <div class="form-group col-6 mt-1">
                    <label for="email" class="form-label">Department</label>
                    <input type="text" class="form-control custom-small-input rounded-0" id="Department" name="Department" value="@Model.PartnerContact.Department">
                </div>

                <div class="form-group col-6 mt-1">
                    <label for="email" class="form-label">Position</label>
                    <input type="text" class="form-control custom-small-input rounded-0" id="Position" name="Position" value="@Model.PartnerContact.Position">
                </div>
            </div>
            <div class="row">
@*                 <div class="form-group col-md-12 mt-2 mt-1">
                    <div class="col-md-12">
                        <input type="checkbox" id="primaryContact" name="primaryContact" value="@Model.PartnerContact.PrimaryContact"/>

                        <label class="form-check-label" for="primaryContact">primary Contact</label>
                     
                    </div>

                </div> *@
                <div class="checkbox-list mt-1">
                    <label class="form-check form-check-custom form-check-solid">
                        <input id="EditRole_IsDefault" type="checkbox" name="PrimaryContact" class="form-check-input" value="true" @Html.Raw(Model.PartnerContact.PrimaryContact ? "checked=\"checked\"" : "")>
                        <span class="form-check-label">
                            @L("PrimaryContact")
                        </span>
                    </label>
               
                </div>
            </div>

        </form>
        <!-- Add other sections here as needed -->
    </div>
</div>

@await Html.PartialAsync("~/Areas/AppAreaName/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")
